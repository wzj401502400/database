-- Capture run of script in file called rcl_schema_output.txt
set echo on
SPOOL rcl_schema_output.txt

--student id: 34589821
--student name: zijie wang

-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-09-17 22:10:51 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE author CASCADE CONSTRAINTS;

DROP TABLE book_copy CASCADE CONSTRAINTS;

DROP TABLE borrower CASCADE CONSTRAINTS;

DROP TABLE borrower_class CASCADE CONSTRAINTS;

DROP TABLE branch CASCADE CONSTRAINTS;

DROP TABLE catalogue CASCADE CONSTRAINTS;

DROP TABLE catalogue_author CASCADE CONSTRAINTS;

DROP TABLE catalogue_subject CASCADE CONSTRAINTS;

DROP TABLE identifier CASCADE CONSTRAINTS;

DROP TABLE lga CASCADE CONSTRAINTS;

DROP TABLE loan CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE publisher CASCADE CONSTRAINTS;

DROP TABLE reserve CASCADE CONSTRAINTS;

DROP TABLE subject CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE author (
    author_no    NUMBER(10) NOT NULL,
    author_fname VARCHAR2(20) NOT NULL,
    author_lname VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN author.author_no IS
    'Author number';

COMMENT ON COLUMN author.author_fname IS
    'Author first name';

COMMENT ON COLUMN author.author_lname IS
    'Author last name';

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_no );

CREATE TABLE book_copy (
    book_copy_id        NUMBER(10) NOT NULL,
    branch_code         NUMBER(8) NOT NULL,
    book_counter_status CHAR(1) NOT NULL,
    book_pur_price      NUMBER(8, 2) NOT NULL,
    identifier_isbn     NUMBER(13) NOT NULL
);

ALTER TABLE book_copy
    ADD CONSTRAINT chk_book_counter_status CHECK ( book_counter_status IN ( 'A', 'L', 'R' ) );

COMMENT ON COLUMN book_copy.book_copy_id IS
    'Book copy ID';

COMMENT ON COLUMN book_copy.branch_code IS
    'Branch code';

COMMENT ON COLUMN book_copy.book_counter_status IS
    'Book counter status (reserve/loan/available)';

COMMENT ON COLUMN book_copy.book_pur_price IS
    'Book purchase price';

COMMENT ON COLUMN book_copy.identifier_isbn IS
    'Identifier ISBN 13 number';

ALTER TABLE book_copy ADD CONSTRAINT book_copy_pk PRIMARY KEY ( book_copy_id,
                                                                branch_code );

CREATE TABLE borrower (
    borrower_no      NUMBER(10) NOT NULL,
    borrower_fname   VARCHAR2(20) NOT NULL,
    borrower_lname   VARCHAR2(20) NOT NULL,
    borrower_address VARCHAR2(50) NOT NULL,
    borrower_phoneno VARCHAR2(13) NOT NULL,
    bcls_type        VARCHAR2(30) NOT NULL,
    borrower_status  CHAR(1) NOT NULL,
    branch_code      NUMBER(8) NOT NULL
);

ALTER TABLE borrower
    ADD CONSTRAINT chk_borrower_status CHECK ( borrower_status IN ( 'B', 'P' ) );

COMMENT ON COLUMN borrower.borrower_no IS
    'Borrower number';

COMMENT ON COLUMN borrower.borrower_fname IS
    'Borrower first name';

COMMENT ON COLUMN borrower.borrower_lname IS
    'Borrower last name';

COMMENT ON COLUMN borrower.borrower_address IS
    'Borrower address';

COMMENT ON COLUMN borrower.borrower_phoneno IS
    'Borrower phone number';

COMMENT ON COLUMN borrower.bcls_type IS
    'Borrower class type';

COMMENT ON COLUMN borrower.borrower_status IS
    'Borrower status(permitted and banned)';

COMMENT ON COLUMN borrower.branch_code IS
    'Branch code';

ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

CREATE TABLE borrower_class (
    bcls_type      VARCHAR2(30) NOT NULL,
    bcls_loan_cnt  NUMBER(3) NOT NULL,
    bcls_loan_time NUMBER(3) NOT NULL
);

COMMENT ON COLUMN borrower_class.bcls_type IS
    'Borrower class type';

COMMENT ON COLUMN borrower_class.bcls_loan_cnt IS
    'Borrower class loan count';

COMMENT ON COLUMN borrower_class.bcls_loan_time IS
    'Borrower loan period (day)';

ALTER TABLE borrower_class ADD CONSTRAINT borrower_class_pk PRIMARY KEY ( bcls_type );

CREATE TABLE branch (
    branch_code          NUMBER(8) NOT NULL,
    branch_name          VARCHAR2(30) NOT NULL,
    branch_address       VARCHAR2(50) NOT NULL,
    branch_cont_phone_no NUMBER(13) NOT NULL,
    lga_code             NUMBER(10) NOT NULL,
    manager_id           NUMBER(10) NOT NULL
);

COMMENT ON COLUMN branch.branch_code IS
    'Branch code';

COMMENT ON COLUMN branch.branch_name IS
    'Branch name';

COMMENT ON COLUMN branch.branch_address IS
    'Branch_address';

COMMENT ON COLUMN branch.branch_cont_phone_no IS
    'Branch contact phone number';

COMMENT ON COLUMN branch.lga_code IS
    'LGA code';

COMMENT ON COLUMN branch.manager_id IS
    'Manager ID';

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

CREATE TABLE catalogue (
    catal_call_no        VARCHAR2(13) NOT NULL,
    catal_content        VARCHAR2(2000) NOT NULL,
    catal_title          VARCHAR2(50) NOT NULL,
    catal_date_published CHAR(4) NOT NULL,
    catal_classification CHAR(1) NOT NULL,
    catal_page_no        NUMBER(5) NOT NULL,
    catal_reading_level  NUMBER(2) NOT NULL,
    catal_language       VARCHAR2(20) NOT NULL,
    catal_edition        VARCHAR2(20),
    catal_note           VARCHAR2(200),
    publisher_no         NUMBER(10) NOT NULL
);

ALTER TABLE catalogue
    ADD CONSTRAINT chk_catal_classification CHECK ( catal_classification IN ( 'F', 'R' ) );

COMMENT ON COLUMN catalogue.catal_call_no IS
    'Catalogue call number';

COMMENT ON COLUMN catalogue.catal_content IS
    'Catalogue content';

COMMENT ON COLUMN catalogue.catal_title IS
    'Catalogue title';

COMMENT ON COLUMN catalogue.catal_date_published IS
    'Catalogue published year';

COMMENT ON COLUMN catalogue.catal_classification IS
    'Catalogue classification(fiction or reference)';

COMMENT ON COLUMN catalogue.catal_page_no IS
    'Catalogue page number';

COMMENT ON COLUMN catalogue.catal_reading_level IS
    'Catalague reading level(1-30)';

COMMENT ON COLUMN catalogue.catal_language IS
    'Catalogue language';

COMMENT ON COLUMN catalogue.catal_edition IS
    'Catalogue edition';

COMMENT ON COLUMN catalogue.catal_note IS
    'Catalogue note';

COMMENT ON COLUMN catalogue.publisher_no IS
    'Publisher number';

ALTER TABLE catalogue ADD CONSTRAINT catalogue_entry_pk PRIMARY KEY ( catal_call_no );

CREATE TABLE catalogue_author (
    catal_call_no VARCHAR2(13) NOT NULL,
    author_no     NUMBER(10) NOT NULL
);

COMMENT ON COLUMN catalogue_author.catal_call_no IS
    'Catalogue call number';

COMMENT ON COLUMN catalogue_author.author_no IS
    'Author number';

ALTER TABLE catalogue_author ADD CONSTRAINT catalogueentry_author_pk PRIMARY KEY ( catal_call_no,
                                                                                   author_no );

CREATE TABLE catalogue_subject (
    catal_call_no VARCHAR2(13) NOT NULL,
    subject_id    NUMBER(10) NOT NULL
);

COMMENT ON COLUMN catalogue_subject.catal_call_no IS
    'Catalogue call number';

COMMENT ON COLUMN catalogue_subject.subject_id IS
    'Subject ID';

ALTER TABLE catalogue_subject ADD CONSTRAINT catalogue_subject_pk PRIMARY KEY ( catal_call_no,
                                                                                subject_id );

CREATE TABLE identifier (
    identifier_isbn NUMBER(13) NOT NULL,
    identifier_type VARCHAR2(20) NOT NULL,
    catal_call_no   VARCHAR2(13) NOT NULL
);

COMMENT ON COLUMN identifier.identifier_isbn IS
    'Identifier ISBN 13 number';

COMMENT ON COLUMN identifier.identifier_type IS
    'Iidentifier book type';

COMMENT ON COLUMN identifier.catal_call_no IS
    'Catalogue call number';

ALTER TABLE identifier ADD CONSTRAINT isbn_pk PRIMARY KEY ( identifier_isbn );

CREATE TABLE lga (
    lga_code              NUMBER(10) NOT NULL,
    lga_service_cont_name VARCHAR2(20) NOT NULL,
    lga_cont_phone_no     VARCHAR2(13) NOT NULL,
    lga_size              NUMBER(10, 2) NOT NULL,
    lga_name              VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN lga.lga_code IS
    'LGA code';

COMMENT ON COLUMN lga.lga_service_cont_name IS
    'LGA service contact name';

COMMENT ON COLUMN lga.lga_cont_phone_no IS
    'LGA contact phone number';

COMMENT ON COLUMN lga.lga_size IS
    'LGA size';

COMMENT ON COLUMN lga.lga_name IS
    'LGA name';

ALTER TABLE lga ADD CONSTRAINT pk PRIMARY KEY ( lga_code );

CREATE TABLE loan (
    loan_order_date_time  DATE NOT NULL,
    loan_amount           NUMBER(5) NOT NULL,
    loan_duedate          DATE NOT NULL,
    loan_return_date_time DATE,
    borrower_no           NUMBER(10) NOT NULL,
    loan_fine_amount      NUMBER(7, 2),
    loan_fine_paid_date   DATE,
    book_copy_id          NUMBER(10) NOT NULL,
    branch_code           NUMBER(8) NOT NULL,
    loan_no               NUMBER(10) NOT NULL
);

COMMENT ON COLUMN loan.loan_order_date_time IS
    'Loan order date and time';

COMMENT ON COLUMN loan.loan_amount IS
    'Loan amount';

COMMENT ON COLUMN loan.loan_duedate IS
    'Loan due date';

COMMENT ON COLUMN loan.loan_return_date_time IS
    'Loan return date and time';

COMMENT ON COLUMN loan.borrower_no IS
    'Borrower number';

COMMENT ON COLUMN loan.loan_fine_amount IS
    'Loan fine amount';

COMMENT ON COLUMN loan.loan_fine_paid_date IS
    'Loan fine paid date';

COMMENT ON COLUMN loan.book_copy_id IS
    'Book copy ID';

COMMENT ON COLUMN loan.branch_code IS
    'Branch code';

COMMENT ON COLUMN loan.loan_no IS
    'Surrogate key loan number, there are three primary keys, we need to combined them into one primary key.';

ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_no );

ALTER TABLE loan
    ADD CONSTRAINT loan_nk UNIQUE ( loan_order_date_time,
                                    book_copy_id,
                                    branch_code );

CREATE TABLE manager (
    manager_id            NUMBER(10) NOT NULL,
    manager_fname         VARCHAR2(20) NOT NULL,
    manager_lname         VARCHAR2(20) NOT NULL,
    manager_cont_phone_no VARCHAR2(13) NOT NULL,
    branch_code           NUMBER(8) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'Manager ID';

COMMENT ON COLUMN manager.manager_fname IS
    'Manager first name';

COMMENT ON COLUMN manager.manager_lname IS
    'Manager last name';

COMMENT ON COLUMN manager.manager_cont_phone_no IS
    'Manager contact phone number';

COMMENT ON COLUMN manager.branch_code IS
    'Branch code';

CREATE UNIQUE INDEX manager__idx ON
    manager (
        branch_code
    ASC );

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE publisher (
    publisher_no   NUMBER(10) NOT NULL,
    publisher_name VARCHAR2(40) NOT NULL
);

COMMENT ON COLUMN publisher.publisher_no IS
    'Publisher number';

COMMENT ON COLUMN publisher.publisher_name IS
    'Publisher name';

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_no );

CREATE TABLE reserve (
    borrower_no              NUMBER(10) NOT NULL,
    reserve_create_date_time DATE NOT NULL,
    book_copy_id             NUMBER(10) NOT NULL,
    branch_code              NUMBER(8) NOT NULL,
    reserve_no               NUMBER(10) NOT NULL
);

COMMENT ON COLUMN reserve.borrower_no IS
    'Borrower number';

COMMENT ON COLUMN reserve.reserve_create_date_time IS
    'Reserve create date and time';

COMMENT ON COLUMN reserve.book_copy_id IS
    'Book copy ID';

COMMENT ON COLUMN reserve.branch_code IS
    'Branch code';

COMMENT ON COLUMN reserve.reserve_no IS
    'Surrogate key reserve number, there are two existing primary keys, we need to combined them into one primary key as a surrogate key.'
    ;

ALTER TABLE reserve ADD CONSTRAINT reserve_pk PRIMARY KEY ( reserve_no );

ALTER TABLE reserve
    ADD CONSTRAINT reserve_nk UNIQUE ( book_copy_id,
                                       branch_code,
                                       borrower_no );

CREATE TABLE subject (
    subject_id   NUMBER(10) NOT NULL,
    subject_desc VARCHAR2(100) NOT NULL
);

COMMENT ON COLUMN subject.subject_id IS
    'Subject ID';

COMMENT ON COLUMN subject.subject_desc IS
    'Subject description';

ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

ALTER TABLE loan
    ADD CONSTRAINT bookcopy_loan_fk FOREIGN KEY ( book_copy_id,
                                                  branch_code )
        REFERENCES book_copy ( book_copy_id,
                               branch_code );

ALTER TABLE reserve
    ADD CONSTRAINT bookcopy_reserve_fk FOREIGN KEY ( book_copy_id,
                                                     branch_code )
        REFERENCES book_copy ( book_copy_id,
                               branch_code );

ALTER TABLE borrower
    ADD CONSTRAINT borrower_borrowerclass_fk FOREIGN KEY ( bcls_type )
        REFERENCES borrower_class ( bcls_type );

ALTER TABLE borrower
    ADD CONSTRAINT borrower_homebranch_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE loan
    ADD CONSTRAINT borrower_loan_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE reserve
    ADD CONSTRAINT borrower_reserve_pk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE book_copy
    ADD CONSTRAINT branch_bookcopy_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE catalogue_author
    ADD CONSTRAINT catalogue_catalogueauthor_fk FOREIGN KEY ( catal_call_no )
        REFERENCES catalogue ( catal_call_no );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT catalogue_cataloguesubject_fk FOREIGN KEY ( catal_call_no )
        REFERENCES catalogue ( catal_call_no );

ALTER TABLE identifier
    ADD CONSTRAINT catalogue_identifier_fk FOREIGN KEY ( catal_call_no )
        REFERENCES catalogue ( catal_call_no );

ALTER TABLE catalogue
    ADD CONSTRAINT catalogue_publisher_fk FOREIGN KEY ( publisher_no )
        REFERENCES publisher ( publisher_no );

ALTER TABLE catalogue_author
    ADD CONSTRAINT catalogueauthor_author_fk FOREIGN KEY ( author_no )
        REFERENCES author ( author_no );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT cataloguesubject_subject_fk FOREIGN KEY ( subject_id )
        REFERENCES subject ( subject_id );

ALTER TABLE manager
    ADD CONSTRAINT homebranch_manager_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE book_copy
    ADD CONSTRAINT identifier_bookcopy_fk FOREIGN KEY ( identifier_isbn )
        REFERENCES identifier ( identifier_isbn );

ALTER TABLE branch
    ADD CONSTRAINT lga_branch_fk FOREIGN KEY ( lga_code )
        REFERENCES lga ( lga_code );

ALTER TABLE branch
    ADD CONSTRAINT manager_branch_fk FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             1
-- ALTER TABLE                             37
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
SPOOL off
set echo off