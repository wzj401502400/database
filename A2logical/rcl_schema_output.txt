SQL> --student id: 34589821
SQL> --student name: zijie wang
SQL> -- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
SQL> --   at:        2024-09-17 22:10:51 AEST
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> DROP TABLE author CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE book_copy CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE borrower CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE borrower_class CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE branch CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE catalogue CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE catalogue_author CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE catalogue_subject CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE identifier CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE lga CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE loan CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE manager CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE publisher CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE reserve CASCADE CONSTRAINTS;

TABLE dropped.

SQL> DROP TABLE subject CASCADE CONSTRAINTS;

TABLE dropped.

SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> -- predefined type, no DDL - XMLTYPE
SQL> CREATE TABLE author (
  2      author_no    NUMBER(10) NOT NULL,
  3      author_fname VARCHAR2(20) NOT NULL,
  4      author_lname VARCHAR2(20) NOT NULL
  5  );

TABLE created.

SQL> COMMENT ON COLUMN author.author_no IS
  2      'Author number';
Comment created.

SQL> COMMENT ON COLUMN author.author_fname IS
  2      'Author first name';
Comment created.

SQL> COMMENT ON COLUMN author.author_lname IS
  2      'Author last name';
Comment created.

SQL> ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_no );

TABLE altered.

SQL> CREATE TABLE book_copy (
  2      book_copy_id        NUMBER(10) NOT NULL,
  3      branch_code         NUMBER(8) NOT NULL,
  4      book_counter_status CHAR(1) NOT NULL,
  5      book_pur_price      NUMBER(8, 2) NOT NULL,
  6      identifier_isbn     NUMBER(13) NOT NULL
  7  );

TABLE created.

SQL> ALTER TABLE book_copy
  2      ADD CONSTRAINT chk_book_counter_status CHECK ( book_counter_status IN ( 'A', 'L', 'R' ) );

TABLE altered.

SQL> COMMENT ON COLUMN book_copy.book_copy_id IS
  2      'Book copy ID';
Comment created.

SQL> COMMENT ON COLUMN book_copy.branch_code IS
  2      'Branch code';
Comment created.

SQL> COMMENT ON COLUMN book_copy.book_counter_status IS
  2      'Book counter status (reserve/loan/available)';
Comment created.

SQL> COMMENT ON COLUMN book_copy.book_pur_price IS
  2      'Book purchase price';
Comment created.

SQL> COMMENT ON COLUMN book_copy.identifier_isbn IS
  2      'Identifier ISBN 13 number';
Comment created.

SQL> ALTER TABLE book_copy ADD CONSTRAINT book_copy_pk PRIMARY KEY ( book_copy_id,
  2                                                                  branch_code );

TABLE altered.

SQL> CREATE TABLE borrower (
  2      borrower_no      NUMBER(10) NOT NULL,
  3      borrower_fname   VARCHAR2(20) NOT NULL,
  4      borrower_lname   VARCHAR2(20) NOT NULL,
  5      borrower_address VARCHAR2(50) NOT NULL,
  6      borrower_phoneno VARCHAR2(13) NOT NULL,
  7      bcls_type        VARCHAR2(30) NOT NULL,
  8      borrower_status  CHAR(1) NOT NULL,
  9      branch_code      NUMBER(8) NOT NULL
  10  );

TABLE created.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT chk_borrower_status CHECK ( borrower_status IN ( 'B', 'P' ) );

TABLE altered.

SQL> COMMENT ON COLUMN borrower.borrower_no IS
  2      'Borrower number';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_fname IS
  2      'Borrower first name';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_lname IS
  2      'Borrower last name';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_address IS
  2      'Borrower address';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_phoneno IS
  2      'Borrower phone number';
Comment created.

SQL> COMMENT ON COLUMN borrower.bcls_type IS
  2      'Borrower class type';
Comment created.

SQL> COMMENT ON COLUMN borrower.borrower_status IS
  2      'Borrower status(permitted and banned)';
Comment created.

SQL> COMMENT ON COLUMN borrower.branch_code IS
  2      'Branch code';
Comment created.

SQL> ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

TABLE altered.

SQL> CREATE TABLE borrower_class (
  2      bcls_type      VARCHAR2(30) NOT NULL,
  3      bcls_loan_cnt  NUMBER(3) NOT NULL,
  4      bcls_loan_time NUMBER(3) NOT NULL
  5  );

TABLE created.

SQL> COMMENT ON COLUMN borrower_class.bcls_type IS
  2      'Borrower class type';
Comment created.

SQL> COMMENT ON COLUMN borrower_class.bcls_loan_cnt IS
  2      'Borrower class loan count';
Comment created.

SQL> COMMENT ON COLUMN borrower_class.bcls_loan_time IS
  2      'Borrower loan period (day)';
Comment created.

SQL> ALTER TABLE borrower_class ADD CONSTRAINT borrower_class_pk PRIMARY KEY ( bcls_type );

TABLE altered.

SQL> CREATE TABLE branch (
  2      branch_code          NUMBER(8) NOT NULL,
  3      branch_name          VARCHAR2(30) NOT NULL,
  4      branch_address       VARCHAR2(50) NOT NULL,
  5      branch_cont_phone_no NUMBER(13) NOT NULL,
  6      lga_code             NUMBER(10) NOT NULL,
  7      manager_id           NUMBER(10) NOT NULL
  8  );

TABLE created.

SQL> COMMENT ON COLUMN branch.branch_code IS
  2      'Branch code';
Comment created.

SQL> COMMENT ON COLUMN branch.branch_name IS
  2      'Branch name';
Comment created.

SQL> COMMENT ON COLUMN branch.branch_address IS
  2      'Branch_address';
Comment created.

SQL> COMMENT ON COLUMN branch.branch_cont_phone_no IS
  2      'Branch contact phone number';
Comment created.

SQL> COMMENT ON COLUMN branch.lga_code IS
  2      'LGA code';
Comment created.

SQL> COMMENT ON COLUMN branch.manager_id IS
  2      'Manager ID';
Comment created.

SQL> ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

TABLE altered.

SQL> CREATE TABLE catalogue (
  2      catal_call_no        VARCHAR2(13) NOT NULL,
  3      catal_content        VARCHAR2(2000) NOT NULL,
  4      catal_title          VARCHAR2(50) NOT NULL,
  5      catal_date_published CHAR(4) NOT NULL,
  6      catal_classification CHAR(1) NOT NULL,
  7      catal_page_no        NUMBER(5) NOT NULL,
  8      catal_reading_level  NUMBER(2) NOT NULL,
  9      catal_language       VARCHAR2(20) NOT NULL,
  10      catal_edition        VARCHAR2(20),
  11      catal_note           VARCHAR2(200),
  12      publisher_no         NUMBER(10) NOT NULL
  13  );

TABLE created.

SQL> ALTER TABLE catalogue
  2      ADD CONSTRAINT chk_catal_classification CHECK ( catal_classification IN ( 'F', 'R' ) );

TABLE altered.

SQL> COMMENT ON COLUMN catalogue.catal_call_no IS
  2      'Catalogue call number';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_content IS
  2      'Catalogue content';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_title IS
  2      'Catalogue title';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_date_published IS
  2      'Catalogue published year';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_classification IS
  2      'Catalogue classification(fiction or reference)';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_page_no IS
  2      'Catalogue page number';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_reading_level IS
  2      'Catalague reading level(1-30)';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_language IS
  2      'Catalogue language';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_edition IS
  2      'Catalogue edition';
Comment created.

SQL> COMMENT ON COLUMN catalogue.catal_note IS
  2      'Catalogue note';
Comment created.

SQL> COMMENT ON COLUMN catalogue.publisher_no IS
  2      'Publisher number';
Comment created.

SQL> ALTER TABLE catalogue ADD CONSTRAINT catalogue_entry_pk PRIMARY KEY ( catal_call_no );

TABLE altered.

SQL> CREATE TABLE catalogue_author (
  2      catal_call_no VARCHAR2(13) NOT NULL,
  3      author_no     NUMBER(10) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN catalogue_author.catal_call_no IS
  2      'Catalogue call number';
Comment created.

SQL> COMMENT ON COLUMN catalogue_author.author_no IS
  2      'Author number';
Comment created.

SQL> ALTER TABLE catalogue_author ADD CONSTRAINT catalogueentry_author_pk PRIMARY KEY ( catal_call_no,
  2                                                                                     author_no );

TABLE altered.

SQL> CREATE TABLE catalogue_subject (
  2      catal_call_no VARCHAR2(13) NOT NULL,
  3      subject_id    NUMBER(10) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN catalogue_subject.catal_call_no IS
  2      'Catalogue call number';
Comment created.

SQL> COMMENT ON COLUMN catalogue_subject.subject_id IS
  2      'Subject ID';
Comment created.

SQL> ALTER TABLE catalogue_subject ADD CONSTRAINT catalogue_subject_pk PRIMARY KEY ( catal_call_no,
  2                                                                                  subject_id );

TABLE altered.

SQL> CREATE TABLE identifier (
  2      identifier_isbn NUMBER(13) NOT NULL,
  3      identifier_type VARCHAR2(20) NOT NULL,
  4      catal_call_no   VARCHAR2(13) NOT NULL
  5  );

TABLE created.

SQL> COMMENT ON COLUMN identifier.identifier_isbn IS
  2      'Identifier ISBN 13 number';
Comment created.

SQL> COMMENT ON COLUMN identifier.identifier_type IS
  2      'Iidentifier book type';
Comment created.

SQL> COMMENT ON COLUMN identifier.catal_call_no IS
  2      'Catalogue call number';
Comment created.

SQL> ALTER TABLE identifier ADD CONSTRAINT isbn_pk PRIMARY KEY ( identifier_isbn );

TABLE altered.

SQL> CREATE TABLE lga (
  2      lga_code              NUMBER(10) NOT NULL,
  3      lga_service_cont_name VARCHAR2(20) NOT NULL,
  4      lga_cont_phone_no     VARCHAR2(13) NOT NULL,
  5      lga_size              NUMBER(10, 2) NOT NULL,
  6      lga_name              VARCHAR2(30) NOT NULL
  7  );

TABLE created.

SQL> COMMENT ON COLUMN lga.lga_code IS
  2      'LGA code';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_service_cont_name IS
  2      'LGA service contact name';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_cont_phone_no IS
  2      'LGA contact phone number';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_size IS
  2      'LGA size';
Comment created.

SQL> COMMENT ON COLUMN lga.lga_name IS
  2      'LGA name';
Comment created.

SQL> ALTER TABLE lga ADD CONSTRAINT pk PRIMARY KEY ( lga_code );

TABLE altered.

SQL> CREATE TABLE loan (
  2      loan_order_date_time  DATE NOT NULL,
  3      loan_amount           NUMBER(5) NOT NULL,
  4      loan_duedate          DATE NOT NULL,
  5      loan_return_date_time DATE,
  6      borrower_no           NUMBER(10) NOT NULL,
  7      loan_fine_amount      NUMBER(7, 2),
  8      loan_fine_paid_date   DATE,
  9      book_copy_id          NUMBER(10) NOT NULL,
  10      branch_code           NUMBER(8) NOT NULL,
  11      loan_no               NUMBER(10) NOT NULL
  12  );

TABLE created.

SQL> COMMENT ON COLUMN loan.loan_order_date_time IS
  2      'Loan order date and time';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_amount IS
  2      'Loan amount';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_duedate IS
  2      'Loan due date';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_return_date_time IS
  2      'Loan return date and time';
Comment created.

SQL> COMMENT ON COLUMN loan.borrower_no IS
  2      'Borrower number';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_fine_amount IS
  2      'Loan fine amount';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_fine_paid_date IS
  2      'Loan fine paid date';
Comment created.

SQL> COMMENT ON COLUMN loan.book_copy_id IS
  2      'Book copy ID';
Comment created.

SQL> COMMENT ON COLUMN loan.branch_code IS
  2      'Branch code';
Comment created.

SQL> COMMENT ON COLUMN loan.loan_no IS
  2      'Surrogate key loan number, there are three primary keys, we need to combined them into one primary key.';
Comment created.

SQL> ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_no );

TABLE altered.

SQL> ALTER TABLE loan
  2      ADD CONSTRAINT loan_nk UNIQUE ( loan_order_date_time,
  3                                      book_copy_id,
  4                                      branch_code );

TABLE altered.

SQL> CREATE TABLE manager (
  2      manager_id            NUMBER(10) NOT NULL,
  3      manager_fname         VARCHAR2(20) NOT NULL,
  4      manager_lname         VARCHAR2(20) NOT NULL,
  5      manager_cont_phone_no VARCHAR2(13) NOT NULL,
  6      branch_code           NUMBER(8) NOT NULL
  7  );

TABLE created.

SQL> COMMENT ON COLUMN manager.manager_id IS
  2      'Manager ID';
Comment created.

SQL> COMMENT ON COLUMN manager.manager_fname IS
  2      'Manager first name';
Comment created.

SQL> COMMENT ON COLUMN manager.manager_lname IS
  2      'Manager last name';
Comment created.

SQL> COMMENT ON COLUMN manager.manager_cont_phone_no IS
  2      'Manager contact phone number';
Comment created.

SQL> COMMENT ON COLUMN manager.branch_code IS
  2      'Branch code';
Comment created.

SQL> CREATE UNIQUE INDEX manager__idx ON
  2      manager (
  3          branch_code
  4      ASC );

INDEX created.

SQL> ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

TABLE altered.

SQL> CREATE TABLE publisher (
  2      publisher_no   NUMBER(10) NOT NULL,
  3      publisher_name VARCHAR2(40) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN publisher.publisher_no IS
  2      'Publisher number';
Comment created.

SQL> COMMENT ON COLUMN publisher.publisher_name IS
  2      'Publisher name';
Comment created.

SQL> ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_no );

TABLE altered.

SQL> CREATE TABLE reserve (
  2      borrower_no              NUMBER(10) NOT NULL,
  3      reserve_create_date_time DATE NOT NULL,
  4      book_copy_id             NUMBER(10) NOT NULL,
  5      branch_code              NUMBER(8) NOT NULL,
  6      reserve_no               NUMBER(10) NOT NULL
  7  );

TABLE created.

SQL> COMMENT ON COLUMN reserve.borrower_no IS
  2      'Borrower number';
Comment created.

SQL> COMMENT ON COLUMN reserve.reserve_create_date_time IS
  2      'Reserve create date and time';
Comment created.

SQL> COMMENT ON COLUMN reserve.book_copy_id IS
  2      'Book copy ID';
Comment created.

SQL> COMMENT ON COLUMN reserve.branch_code IS
  2      'Branch code';
Comment created.

SQL> COMMENT ON COLUMN reserve.reserve_no IS
  2      'Surrogate key reserve number, there are two existing primary keys, we need to combined them into one primary key as a surrogate key.'
  3       ;
Comment created.

SQL> ALTER TABLE reserve ADD CONSTRAINT reserve_pk PRIMARY KEY ( reserve_no );

TABLE altered.

SQL> ALTER TABLE reserve
  2      ADD CONSTRAINT reserve_nk UNIQUE ( book_copy_id,
  3                                         branch_code,
  4                                         borrower_no );

TABLE altered.

SQL> CREATE TABLE subject (
  2      subject_id   NUMBER(10) NOT NULL,
  3      subject_desc VARCHAR2(100) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN subject.subject_id IS
  2      'Subject ID';
Comment created.

SQL> COMMENT ON COLUMN subject.subject_desc IS
  2      'Subject description';
Comment created.

SQL> ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

TABLE altered.

SQL> ALTER TABLE loan
  2      ADD CONSTRAINT bookcopy_loan_fk FOREIGN KEY ( book_copy_id,
  3                                                    branch_code )
  4          REFERENCES book_copy ( book_copy_id,
  5                                 branch_code );

TABLE altered.

SQL> ALTER TABLE reserve
  2      ADD CONSTRAINT bookcopy_reserve_fk FOREIGN KEY ( book_copy_id,
  3                                                       branch_code )
  4          REFERENCES book_copy ( book_copy_id,
  5                                 branch_code );

TABLE altered.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT borrower_borrowerclass_fk FOREIGN KEY ( bcls_type )
  3          REFERENCES borrower_class ( bcls_type );

TABLE altered.

SQL> ALTER TABLE borrower
  2      ADD CONSTRAINT borrower_homebranch_fk FOREIGN KEY ( branch_code )
  3          REFERENCES branch ( branch_code );

TABLE altered.

SQL> ALTER TABLE loan
  2      ADD CONSTRAINT borrower_loan_fk FOREIGN KEY ( borrower_no )
  3          REFERENCES borrower ( borrower_no );

TABLE altered.

SQL> ALTER TABLE reserve
  2      ADD CONSTRAINT borrower_reserve_pk FOREIGN KEY ( borrower_no )
  3          REFERENCES borrower ( borrower_no );

TABLE altered.

SQL> ALTER TABLE book_copy
  2      ADD CONSTRAINT branch_bookcopy_fk FOREIGN KEY ( branch_code )
  3          REFERENCES branch ( branch_code );

TABLE altered.

SQL> ALTER TABLE catalogue_author
  2      ADD CONSTRAINT catalogue_catalogueauthor_fk FOREIGN KEY ( catal_call_no )
  3          REFERENCES catalogue ( catal_call_no );

TABLE altered.

SQL> ALTER TABLE catalogue_subject
  2      ADD CONSTRAINT catalogue_cataloguesubject_fk FOREIGN KEY ( catal_call_no )
  3          REFERENCES catalogue ( catal_call_no );

TABLE altered.

SQL> ALTER TABLE identifier
  2      ADD CONSTRAINT catalogue_identifier_fk FOREIGN KEY ( catal_call_no )
  3          REFERENCES catalogue ( catal_call_no );

TABLE altered.

SQL> ALTER TABLE catalogue
  2      ADD CONSTRAINT catalogue_publisher_fk FOREIGN KEY ( publisher_no )
  3          REFERENCES publisher ( publisher_no );

TABLE altered.

SQL> ALTER TABLE catalogue_author
  2      ADD CONSTRAINT catalogueauthor_author_fk FOREIGN KEY ( author_no )
  3          REFERENCES author ( author_no );

TABLE altered.

SQL> ALTER TABLE catalogue_subject
  2      ADD CONSTRAINT cataloguesubject_subject_fk FOREIGN KEY ( subject_id )
  3          REFERENCES subject ( subject_id );

TABLE altered.

SQL> ALTER TABLE manager
  2      ADD CONSTRAINT homebranch_manager_fk FOREIGN KEY ( branch_code )
  3          REFERENCES branch ( branch_code );

TABLE altered.

SQL> ALTER TABLE book_copy
  2      ADD CONSTRAINT identifier_bookcopy_fk FOREIGN KEY ( identifier_isbn )
  3          REFERENCES identifier ( identifier_isbn );

TABLE altered.

SQL> ALTER TABLE branch
  2      ADD CONSTRAINT lga_branch_fk FOREIGN KEY ( lga_code )
  3          REFERENCES lga ( lga_code );

TABLE altered.

SQL> ALTER TABLE branch
  2      ADD CONSTRAINT manager_branch_fk FOREIGN KEY ( manager_id )
  3          REFERENCES manager ( manager_id );

TABLE altered.

SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            15
SQL> -- CREATE INDEX                             1
SQL> -- ALTER TABLE                             37
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> SPOOL off

